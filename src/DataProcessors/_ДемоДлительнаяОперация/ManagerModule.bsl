///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Пример функции, вызываемой в фоне.
Функция РассчитатьЗначение(НомерОперации, ДополнительныеПараметры) Экспорт
	
	ИмитироватьДлительноеДействие(НомерОперации, ДополнительныеПараметры);
	
	Если ДополнительныеПараметры.ЗавершитьСОшибкой Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка: расчет %1 не выполнен'"), Символ(0) + НомерОперации);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Расчет %1 выполнен за %2 сек.'"), НомерОперации, ДополнительныеПараметры.ДлительностьРасчета);
	
КонецФункции

// Пример процедуры, вызываемой в фоне.
Процедура ВыполнитьРасчет(НомерОперации, ДополнительныеПараметры) Экспорт
	
	ИмитироватьДлительноеДействие(НомерОперации, ДополнительныеПараметры);
	
	Если ДополнительныеПараметры.ЗавершитьСОшибкой Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка: действие %1 не выполнено'"), Символ(0) + НомерОперации);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Функция НовыеДополнительныеПараметрыВыполнения() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ДлительностьРасчета", 0);
	Результат.Вставить("ЗавершитьСОшибкой", Ложь);
	Результат.Вставить("ВыводитьПрогрессВыполнения", Истина);
	Результат.Вставить("СообщенияЧерезСообщить", Ложь);
	Результат.Вставить("КоличествоШаговПрогресса", 10);
	Результат.Вставить("РазмерШаговПрогресса", "");
	
	Возврат Результат;
	
КонецФункции

// Параметры:
//  НомерОперации - Число
//  ДополнительныеПараметры - см. НовыеДополнительныеПараметрыВыполнения
//
Процедура ИмитироватьДлительноеДействие(НомерОперации, ДополнительныеПараметры)
	
	Если ДополнительныеПараметры.ДлительностьРасчета = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 операция %2 выполнена на %3 %'"),
			ТекущаяДатаСеанса(), НомерОперации, 100, 0);
		
		Если ДополнительныеПараметры.СообщенияЧерезСообщить Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	РазмерШаговПрогресса = Новый Массив;
	ОстатокДлительности = ДополнительныеПараметры.ДлительностьРасчета;
	УказанныйРазмерШаговПрогресса = СтрРазделить(ДополнительныеПараметры.РазмерШаговПрогресса, " ", Ложь);
	Для Каждого РазмерШага Из УказанныйРазмерШаговПрогресса Цикл
		ЧислоСекунд = Число(РазмерШага);
		Если ЧислоСекунд > ДополнительныеПараметры.ДлительностьРасчета Тогда
			ЧислоСекунд = ДополнительныеПараметры.ДлительностьРасчета;
		КонецЕсли;
		Если ОстатокДлительности < ЧислоСекунд Тогда
			ЧислоСекунд = ОстатокДлительности;
		КонецЕсли;
		РазмерШаговПрогресса.Добавить(ЧислоСекунд * 1000);
		ОстатокДлительности = ОстатокДлительности - ЧислоСекунд;
		Если ОстатокДлительности = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	КоличествоШаговПрогресса = ДополнительныеПараметры.КоличествоШаговПрогресса;
	РазмерНеуказанногоШага = ОстатокДлительности / КоличествоШаговПрогресса * 1000;
	ФоновоеЗадание = ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание();
	Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Для Счетчик = 1 По КоличествоШаговПрогресса Цикл
		Процент = Цел(Счетчик / КоличествоШаговПрогресса * 100);
		Этап = Мин(Цел(Счетчик / (КоличествоШаговПрогресса / 3)) + 1, 3); // Имитация операции в 3 этапа.
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 операция %2 выполнена на %3 % (этап %4)'"),
			ТекущаяДатаСеанса(), НомерОперации, Процент, Этап);
		
		Если ДополнительныеПараметры.СообщенияЧерезСообщить Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		РазмерТекущегоШага = ?(РазмерШаговПрогресса.Количество() < Счетчик,
			РазмерНеуказанногоШага, РазмерШаговПрогресса[Счетчик - 1]);
		
		Если ДополнительныеПараметры.ВыводитьПрогрессВыполнения Тогда
			ДлительныеОперации.СообщитьПрогресс(Процент, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Этап %1, Шаг %2'"), Этап, Строка(Счетчик) + "[" + РазмерТекущегоШага / 1000 + "]"));
		КонецЕсли;
		
		Начало = Начало + РазмерТекущегоШага;
		ТекущийМомент = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ИнтервалОжидания = (Начало - ТекущийМомент) / 1000;
		Если ИнтервалОжидания > 0 Тогда
			Пауза(ФоновоеЗадание, ИнтервалОжидания);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура Пауза(ФоновоеЗадание, ИнтервалОжидания)
	
	Если ФоновоеЗадание <> Неопределено Тогда
		ФоновоеЗадание.ОжидатьЗавершенияВыполнения(ИнтервалОжидания);
	Иначе
		Конец = ТекущаяУниверсальнаяДатаВМиллисекундах() + ИнтервалОжидания * 1000;
		Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < Конец Цикл
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
